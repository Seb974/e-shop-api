security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)

    role_hierarchy:
        ROLE_TEAM: [ROLE_USER]
        ROLE_SELLER: [ROLE_TEAM]
        ROLE_DELIVERER: [ROLE_TEAM]
        ROLE_RELAYPOINT: [ROLE_TEAM]
        ROLE_SUPERVISOR: [ROLE_TEAM]
        ROLE_PICKER: [ROLE_SELLER, ROLE_DELIVERER]
        ROLE_ADMIN: [ROLE_PICKER, ROLE_RELAYPOINT, ROLE_SUPERVISOR]
        ROLE_SUPER_ADMIN : [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        registration:
            pattern: ^/api/users
            anonymous: true
            stateless: true
            methods: [POST]

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true
            lazy: true
            provider: app_user_provider

            logout:
                path: app_logout
                # target: '/api'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/products, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/categories, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/create-payment, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users, roles: ROLE_TEAM, methods: ['GET'] }
        - { path: ^/api/api/order_entities, roles: ROLE_USER, methods: ['GET'] }
        - { path: ^/api/units, roles: ROLE_ADMIN, methods: ['POST', 'PUT', 'PATCH', 'DELETE'] }
        - { path: ^/api/suppliers, roles: ROLE_SELLER, methods: ['POST', 'PUT', 'PATCH', 'DELETE'] }
        - { path: ^/api,       roles: IS_AUTHENTICATED_ANONYMOUSLY }
       # - { path: ^/api/users, roles: ROLE_ADMIN, methods: ['GET', 'PUT', 'PATCH', 'DELETE'] }
        # - { path: ^/admin, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/profile, roles: ROLE_USER }
